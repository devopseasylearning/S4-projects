pipeline {
    agent any
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Build') {
            steps {
                sh 'javac -version'
                sh 'javac src/*.java -d build'
            }
        }
        
        stage('Test') {
            steps {
                sh 'java -cp build org.junit.runner.JUnitCore YourTestClass'
            }
        }
        
        stage('Deploy') {
            steps {
                sh 'scp -r build user@server:/path/to/deploy'
            }
        }
        
        stage('SonarQube analysis') {
            agent {
                docker {
                    image 'sonarsource/sonar-scanner-cli:latest'
                }
            }
            environment {
                CI = 'true'
            }
            steps {
                script {
                    def scannerHome = tool name: 'SonarScanner', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
                    withSonarQubeEnv('Sonar') {
                        sh "${scannerHome}/bin/sonar-scanner"
                    }
                }
            }
        }
    }
    
    post {
        success {
            echo 'Pipeline succeeded! Application deployed.'
        }
        failure {
            echo 'Pipeline failed. Please check.'
        }
    }
}
