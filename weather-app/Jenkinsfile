pipeline {
    agent any
    
    stages {
        stage('Checkout') {
            steps {
                // Checkout your source code repository (e.g., Git)
                checkout scm
            }
        }
        
        stage('Build') {
            steps {
                // Compile your Java application
                sh 'javac -version'
                sh 'javac src/*.java -d build'
            }
        }
        
        stage('Test') {
            steps {
                // Run your tests (assuming JUnit tests)
                sh 'java -cp build org.junit.runner.JUnitCore YourTestClass'
            }
        }
        
        stage('Deploy') {
            steps {
                // Deploy your application (e.g., to a server)
                sh 'scp -r build user@server:/path/to/deploy'
            }
        }

            stages {
         stage('SonarQube analysis') {
            agent {
                docker {
                  image 'sonarsource/sonar-scanner-cli:4.7.0'
                }
               }
               environment {
        CI = 'true'
        //  scannerHome = tool 'Sonar'
        scannerHome='/opt/sonar-scanner'
    }
            steps{
                withSonarQubeEnv('Sonar') {
                    sh "${scannerHome}/bin/sonar-scanner"
                }
            }
        }

    }
    
    post {
        success {
            echo 'Pipeline succeeded! Application deployed.'
        }
        failure {
            echo 'Pipeline failed. Please check.'
        }
    }
}
